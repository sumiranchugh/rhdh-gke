global:
  # TODO: Set your application domain name.
  host: sumilab.zapto.org
  dynamic:
    includes:
      - dynamic-plugins.default.yaml
    plugins:
      - package: ./dynamic-plugins/dist/backstage-plugin-catalog-backend-module-github-dynamic
        disabled: true
      - package: ./dynamic-plugins/dist/backstage-plugin-kubernetes
        disabled: true        
      - package: ./dynamic-plugins/dist/backstage-plugin-kubernetes-backend-dynamic
        disabled: true  
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-rbac
        disabled: false
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-topology
        disabled: false
      - package: ./dynamic-plugins/dist/backstage-plugin-techdocs-backend-dynamic
        disabled: false
        pluginConfig:
          techdocs:
            builder: external
            generator:
              runIn: local
            publisher:
              type: 'googleGcs'
              googleGcs:
                bucketName: 'rhdh-bucket'
                # projectId: 'openenv-b4g6h' # not required if same project
                credentials: 
                  $file: "/opt/app-root/src/credentials.json"
              

route:
  enabled: false


upstream:
  # service:
  #   # NodePort is required for the ALB to route to the Service
  #   type: NodePort
  serviceAccount: 
    name: rhdh-sa
    create: true
    annotations:
      iam.gke.io/gcp-service-account: rhdh-db-sa@openenv-b4g6h.iam.gserviceaccount.com
  postgresql:
    enabled: false
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: gce
      networking.gke.io/managed-certificates: "ingress-test-cert"
  backstage:
    appConfig:
      backend:
        database:
          connection:  # configure Backstage DB connection parameters
            host: '127.0.0.1'
            port: '5432'
            user: rhdh-db-sa@openenv-b4g6h.iam
            password: 'test' #dummy Value
    # args:
    #   - '--config'
    #   - app-config-from-configmap.yaml
    #   - '--config'
    #   - dynamic-plugins-root/app-config.dynamic-plugins.yaml        
    image:
      pullSecrets:
      - rhdh-pull-secret
    podSecurityContext:
      # you can assign any random value as fsGroup
      fsGroup: 2000
    extraAppConfig:
      - configMapRef: app-config-custom
        filename: app-config-custom.yaml   
    extraContainers:
      - name: cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy
        args:
          - "--structured-logs"
          - "--port=5432"
          - "--auto-iam-authn"
          - "openenv-b4g6h:australia-southeast2:rhdh-db"
        securityContext:
          runAsNonRoot: true
        resources:
          requests:
            memory: "2Gi"
            cpu:    "1"        
    # nodeSelector:
    #   iam.gke.io/gke-metadata-server-enabled: "true"    
    extraEnvVars:
      - name: LOG_LEVEL
        value: debug
      - name: BACKEND_SECRET
        valueFrom:
          secretKeyRef:
            key: backend-secret
            name: rhdh-auth
      # - name: POSTGRESQL_ADMIN_PASSWORD
      #   valueFrom:
      #     secretKeyRef:
      #       key: postgres-password
      #       name: rhdh-postgresql 
    extraVolumeMounts:
      - mountPath: "/opt/app-root/src/credentials.json"
        subPath: credentials.json
        name: "techdocs-credentials"
      # - mountPath: /dynamic-plugins-root
      #   name: dynamic-plugins-root
      # - mountPath: /opt/app-root/src/dynamic-plugins.yaml
      #   name: dynamic-plugins
      #   readOnly: true
      #   subPath: dynamic-plugins.yaml
      # - mountPath: /opt/app-root/src/.npmrc.dynamic-plugins
      #   name: dynamic-plugins-npmrc
      #   readOnly: true
      #   subPath: .npmrc
      - mountPath: "/opt/app-root/src/dynamic-plugins-root"
        name: "dynamic-plugins-root"  
    extraVolumes:
      - name: "techdocs-credentials"
        secret: 
          secretName: techdocs-credentials
      - ephemeral:
          volumeClaimTemplate:
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 2Gi
        name: dynamic-plugins-root
      - configMap:
          defaultMode: 420
          name: dynamic-plugins
          optional: true
        name: dynamic-plugins
      - name: dynamic-plugins-npmrc
        secret:
          defaultMode: 420
          optional: true
          secretName: dynamic-plugins-npmrc    
        

  # postgresql:
  #   image:
  #     pullSecrets:
  #     - rhdh-pull-secret
  #   primary:
  #     podSecurityContext:
  #       enabled: true
  #       # you can assign any random value as fsGroup
  #       fsGroup: 3000
  volumePermissions:
    enabled: true
